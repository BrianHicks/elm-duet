module Main.Flags exposing (..)

{-| Warning: this file is automatically generated. Don't edit by hand!
-}

import Dict exposing (Dict)
import Json.Decode
import Json.Decode.Pipeline
import Json.Encode


type alias Flags =
    { eight : String
    , eleven : String
    , five : String
    , four : String
    , nine : String
    , one : String
    , seven : String
    , six : String
    , ten : String
    , three : String
    , twelve : String
    , two : String
    }


flagsDecoder : Json.Decode.Decoder Flags
flagsDecoder =
    Json.Decode.succeed Flags
        |> Json.Decode.Pipeline.required "eight" Json.Decode.string
        |> Json.Decode.Pipeline.required "eleven" Json.Decode.string
        |> Json.Decode.Pipeline.required "five" Json.Decode.string
        |> Json.Decode.Pipeline.required "four" Json.Decode.string
        |> Json.Decode.Pipeline.required "nine" Json.Decode.string
        |> Json.Decode.Pipeline.required "one" Json.Decode.string
        |> Json.Decode.Pipeline.required "seven" Json.Decode.string
        |> Json.Decode.Pipeline.required "six" Json.Decode.string
        |> Json.Decode.Pipeline.required "ten" Json.Decode.string
        |> Json.Decode.Pipeline.required "three" Json.Decode.string
        |> Json.Decode.Pipeline.required "twelve" Json.Decode.string
        |> Json.Decode.Pipeline.required "two" Json.Decode.string


encodeFlags : Flags -> Json.Encode.Value
encodeFlags flags_ =
    Json.Encode.object
        [ ( "eight", Json.Encode.string flags_.eight )
        , ( "eleven", Json.Encode.string flags_.eleven )
        , ( "five", Json.Encode.string flags_.five )
        , ( "four", Json.Encode.string flags_.four )
        , ( "nine", Json.Encode.string flags_.nine )
        , ( "one", Json.Encode.string flags_.one )
        , ( "seven", Json.Encode.string flags_.seven )
        , ( "six", Json.Encode.string flags_.six )
        , ( "ten", Json.Encode.string flags_.ten )
        , ( "three", Json.Encode.string flags_.three )
        , ( "twelve", Json.Encode.string flags_.twelve )
        , ( "two", Json.Encode.string flags_.two )
        ]
