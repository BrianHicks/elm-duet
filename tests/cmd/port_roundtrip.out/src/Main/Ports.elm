port module Main.Ports exposing (..)

{-| Warning: this file is automatically generated. Don't edit by hand!
-}

import Json.Decode
import Json.Decode.Pipeline
import Json.Encode


type alias ElmToJs =
    { a : String
    }


elmToJsDecoder : Decoder ElmToJs
elmToJsDecoder =
    Json.Decode.succeed ElmToJs
        |> Json.Decode.Pipeline.required "a" Json.Decode.string


encodeElmToJs : ElmToJs -> Json.Encode.Value
encodeElmToJs elmToJs =
    Json.Encode.object
        [ ( "a", Json.Encode.string elmToJs.a )
        ]


type alias JsToElm =
    { a : String
    }


jsToElmDecoder : Decoder JsToElm
jsToElmDecoder =
    Json.Decode.succeed JsToElm
        |> Json.Decode.Pipeline.required "a" Json.Decode.string


encodeJsToElm : JsToElm -> Json.Encode.Value
encodeJsToElm jsToElm =
    Json.Encode.object
        [ ( "a", Json.Encode.string jsToElm.a )
        ]


port elmToJs : Value -> Cmd msg


sendElmToJs : ElmToJs -> Cmd msg
sendElmToJs value =
    elmToJs (encodeElmToJs value)


port jsToElm : (Value -> msg) -> Sub msg


subscribeToJsToElm : (Result Json.Decode.Error JsToElm -> msg) -> Sub msg
subscribeToJsToElm toMsg =
    jsToElm (/value -> toMsg (Json.Decode.decodeValue value jsToElmDecoder))
